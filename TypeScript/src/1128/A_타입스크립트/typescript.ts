/*
! 1. 타입스크립트란?
: Microsoft에서 개발하고 유지하는 오픈 소스 프로그래밍 언어
: JavaScript의 상위 집합인 언어
: 정적 타입 기능을 추가하여 JS의 단점을 보완한 언어

! 2. 타입스크립트의 필요성
: 에러의 사전 방지
  - '컴파일' 시점에서 오류를 발생하여 에러 실행을 방지
: 코드 가이드 및 자동 완성(개발 생산성 향상)

! 3. 정적 타입 vs 동적 타입
: JS(동적 타입 언어)
  - 변수의 타입이 실행 시점에 결정
  - 유연함을 가지는 언어
: TS(정적 타입 언어)
  - 컴파일 시점에 타입 오류를 발견, 타입 정보를 제공
  - 오류 발생을 사전에 방지, 개발 도구에서의 자동 완성, 리팩토링 등에 유용

! 타입스크립트의 장단점
? 장점
  - 정적 타입 체킹
  - 개발 도구의 효율성
  - 객체 지향 프로그래밍 지원

? 단점
  - 학습 곡선 존재
  - 개발 시간이 증가
  - 라이브러리의 타입 정의
*/